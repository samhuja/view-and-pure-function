pragma solidity ^0.8.0;

contract ExampleContract {
    uint public value;

    // View function: Does not modify the contract's state
    function getValue() public view returns (uint) {
        return value;
    }

    // Pure function: Does not read or modify the contract's state
    function multiply(uint a, uint b) public pure returns (uint) {
        return a * b;
    }

    // Payable function: Allows the contract to receive ether
    function deposit() public payable {
        value += msg.value;
    }
}

contract DerivedContract is ExampleContract {
    // Inherited functions can be accessed within derived contracts
    function getValueAndMultiply(uint a, uint b) public view returns (uint, uint) {
        uint val = getValue();
        uint result = multiply(a, b);
        return (val, result);
    }
}
